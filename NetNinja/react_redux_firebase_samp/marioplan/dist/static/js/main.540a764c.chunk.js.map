{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Notifications.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","config/firebaseConfig.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","react_default","a","createElement","className","react_router_dom","to","onClick","profile","initials","SignedOutLinks","state","console","log","firebase","links","uid","layout_SignedInLinks","layout_SignedOutLinks","ProjectSummary","_ref","project","title","moment","createdAt","toDate","calendar","ProjectList","projects","map","concat","id","key","projects_ProjectSummary","Notifications","notifications","item","user","content","time","fromNow","Dashboard","_this$props","this","projects_ProjectList","dashboard_Notifications","react_router","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","authorFirstName","authorLastName","SignIn","email","password","handleChange","e","_this","setState","Object","defineProperty","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","authorId","add","objectSpread","Date","App","layout_Navbar","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","initState","authReducer","arguments","length","undefined","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","store","createStore","applyMiddleware","thunk","withExtraArgument","reactReduxFirebase","fbConfig","userProfile","useFirestoreForProfile","attachAuthIsReady","reduxFirestore","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.540a764c.chunk.js","sourcesContent":["import React from 'react'\r\n//Enables active class for the links\r\nimport {NavLink} from 'react-router-dom'\r\n//connect to redux\r\nimport {connect} from 'react-redux'\r\n//action creator \r\nimport {signOut} from '../../store/actions/authActions'\r\n\r\n//functional component takes in props\r\nconst SignedInLinks = (props) => {\r\n  //associating the onclick event to the a-tag directly \r\n  return (\r\n    <div>\r\n      <ul className=\"right\">\r\n        <li><NavLink to='/create'>New Project</NavLink></li>\r\n        <li><a onClick={props.signOut}>Log Out</a></li>\r\n        <li><NavLink to='/' className=\"btn btn-floating pink lighten-1\">{props.profile.initials}</NavLink></li>\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n//adding the property to the props\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signOut: () => dispatch(signOut())\r\n  }\r\n}\r\n\r\n//there is no mapstatetoprops to props so passing null\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks)\r\n\r\n","export const signIn = (credentials) => {//this is the action creator\r\n  //returning a function with a third object and destructuring\r\n  return (dispatch, getState, {getFirebase}) => {\r\n    const firebase = getFirebase(); //initializing firebase instance\r\n    //\r\n    firebase.auth().signInWithEmailAndPassword( //method type of signing in\r\n      credentials.email,\r\n      credentials.password\r\n    ).then(() => {\r\n      dispatch({type: 'LOGIN_SUCCESS'});// just passing type and no additional data\r\n    }).catch((err) => {\r\n      dispatch({type: 'LOGIN_ERROR', err});\r\n    });\r\n\r\n  }\r\n}\r\n\r\n//no need to pass credentials\r\nexport const signOut = () => {\r\n  return (dispatch, getState, {getFirebase}) => {\r\n    const firebase = getFirebase();//make instance\r\n\r\n    firebase.auth().signOut().then(() => {\r\n      dispatch({type: 'SIGNOUT_SUCCESS'}) //when complete dispatch action\r\n    });\r\n  }\r\n}\r\n\r\n//sign up action\r\nexport const signUp = (newUser) => {\r\n  //function takes using firebase and firestore. \r\n  //when creating a new user in firebase, create a user in collection inside firestore\r\n  return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n    //initializing both\r\n    const firebase = getFirebase();\r\n    const firestore = getFirestore();\r\n\r\n    // generate new user\r\n    firebase.auth().createUserWithEmailAndPassword(\r\n      newUser.email,\r\n      newUser.password// communicate with firebase and create new user\r\n    ).then(resp => {//taking response with info about user\r\n      //storing(in or creating) with the user id and set it to a new doc so that ids match\r\n      return firestore.collection('users').doc(resp.user.uid).set({\r\n        firstName: newUser.firstName,\r\n        lastName: newUser.lastName,\r\n        initials:`${newUser.firstName[0]}${newUser.lastName[0]}`\r\n      });//when completed, then send dispatch \r\n    }).then(() => {\r\n      dispatch({type: 'SIGNUP_SUCCESS'});\r\n    }).catch((err) => {\r\n      dispatch({type: 'SIGNUP_ERROR', err});\r\n    });\r\n  }\r\n}","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst SignedOutLinks = () => {\r\n  return (\r\n    <div>\r\n      <ul className=\"right\">\r\n        <li><NavLink to='/signup'>Signup</NavLink></li>\r\n        <li><NavLink to='/signin'>Login</NavLink></li>\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SignedOutLinks","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport SignedInLinks from './SignedInLinks'\r\nimport SignedOutLinks from './SignedOutLinks'\r\nimport { connect } from 'react-redux'\r\n// functional component passing props\r\nconst Navbar = props => {\r\n  const { auth, profile } = props\r\n  // console.log(auth);\r\n  // this will be true if id property exists show the component otherwise signout links and store it\r\n  const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />\r\n\r\n  return (\r\n    <nav className='nav-wrapper grey darken-3'>\r\n      <div className='container'>\r\n        <Link to='/' className='brand-logo'>\r\n          MarioPlan\r\n        </Link>\r\n        {links}\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n//takes in the entire state but only attaching auth\r\nconst mapStateToProps = state => {\r\n  console.log(state);\r\n  return {\r\n    auth: state.firebase.auth, //attaching auth property to props\r\n    profile:state.firebase.profile\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar)\r\n","import React from 'react'\r\n//using package moment js \r\nimport moment from 'moment'\r\n\r\n//receiving an individual project\r\nconst ProjectSummary = ({project}) => {\r\n    return (\r\n      <div className=\"card z-depth-0 project-summary\">\r\n        <div className=\"card-content grey-text text-darken-3\">\r\n          <span className=\"card-title \">{project.title}</span>\r\n          <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\nexport default ProjectSummary\r\n","import React from 'react';\r\n//single component being reused\r\nimport ProjectSummary from './ProjectSummary';\r\nimport { Link } from 'react-router-dom'\r\n\r\n//destructuring directly and grabbing project directly from the props\r\nconst ProjectList = ({projects}) => {\r\n  //using conditional truthy to render if projects and passing props\r\n  return (\r\n    <div className=\"project-list section\">\r\n      {projects && projects.map(project => {\r\n        return (\r\n          <Link to={`/project/${project.id}`} key={project.id}>\r\n            <ProjectSummary project={project} />\r\n          </Link>\r\n        )\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProjectList;\r\n","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst Notifications = (props) => {\r\n    //cycling through the destructured array using map if length is more than 0\r\n    const {notifications} = props;\r\n    return (\r\n        <div className=\"section\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">Notifications</span>\r\n                    <ul className=\"online-users\">\r\n                        {notifications && notifications.map(item => {\r\n                            return <li key={item.id}>\r\n                                <span className=\"pink-text\">{item.user} </span>\r\n                                <span>{item.content}</span>\r\n                                <div className=\"note-date grey-text\">{moment(item.time.toDate()).fromNow()}</div>\r\n                            </li>\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notifications\r\n","import React, {Component} from 'react';\r\nimport ProjectList from '../projects/ProjectList';\r\nimport Notifications from './Notifications';\r\nimport {connect} from 'react-redux'\r\n//being used as a higher order component\r\nimport {firestoreConnect} from 'react-redux-firebase'\r\nimport {compose} from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\n//Class based component --> might use state\r\nclass Dashboard extends Component {\r\n  render() {\r\n    // console.log(this.props)\r\n    //destructuring then passing down the component as props \r\n    const { projects, auth, notifications } = this.props;\r\n    if (!auth.uid) return <Redirect to='/signin' />  //if there is not a user id\r\n\r\n    return (\r\n      <div className=\"dashboard container\">\r\n        <div className=\"row\">\r\n          <div className=\"col s12 m6\">\r\n            <ProjectList projects={projects} />\r\n          </div>\r\n          <div className=\"col s12 m5 offset-m1\">\r\n          <Notifications notifications={notifications} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  // console.log(state)\r\n  return {\r\n    projects: state.firestore.ordered.projects, //loading from db\r\n    auth: state.firebase.auth, // grabbing auth from state\r\n    notifications: state.firestore.ordered.notifications //ordered property\r\n  }\r\n}\r\n\r\n//multiple wrappers \r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([// this will connect with the reducer to update and passing the in array\r\n    { collection: 'projects', orderBy:['createdAt', 'desc'] },\r\n    { collection: 'notifications', limit: 3, orderBy:['time', 'desc']} //behind the scenes the firestore reducer will handle the attaching\r\n  ])\r\n)(Dashboard)\r\n\r\n// firestoreConnect takes in an object, which specifies what collection wer're connecting to","import React from 'react'\r\n//import connect and redux state\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport {compose} from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport moment from 'moment'\r\n//props coming from the router\r\nconst ProjectDetails = (props) => {\r\n  const { project, auth } = props;\r\n  if (!auth.uid) return <Redirect to='/signin' /> \r\n  if (project) {\r\n    return (\r\n      <div className=\"container section project-details\">\r\n        <div className=\"card z-depth-0\">\r\n          <div className=\"card-content\">\r\n            <span className=\"card-title\">{project.title}</span>\r\n            <p>{project.content}</p>\r\n          </div>\r\n          <div className=\"card-action grey lighten-4 grey-text\">\r\n            <div>Posted by {project.authorFirstName} {project.authorLastName}</div>\r\n            <div>{moment(project.createdAt.toDate()).calendar()}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  } else {\r\n    return (\r\n      <div className=\"container center\">\r\n        <p>Loading project...</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n//functions defines what we want to attach to our props\r\nconst mapStateToProps = (state, ownProps) => {\r\n    // console.log(state); \r\n    const id = ownProps.match.params.id;// getting the props from component as ownProps\r\n    const projects = state.firestore.data.projects;\r\n    const project = projects ? projects[id] : null // if project find id\r\n    return {\r\n      project: project,\r\n      auth: state.firebase.auth\r\n    }\r\n  }\r\n\r\nexport default compose( //compose the higher order components\r\n    connect(mapStateToProps),\r\n    firestoreConnect([{\r\n      collection: 'projects' // specifying which base we're using\r\n    }])\r\n  )(ProjectDetails)\r\n  ","import React, {Component} from \"react\";\r\n//connect to redux\r\nimport {connect} from \"react-redux\";\r\n//sign in action\r\nimport {signIn} from \"../../store/actions/authActions\";\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nclass SignIn extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\"\r\n  };\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    });\r\n  };\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.signIn(this.state); //passing the credentials\r\n  };\r\n  render() {\r\n    const {authError, auth} = this.props; \r\n    if (auth.uid) return <Redirect to='/' /> // if logged in head over to dashboard\r\n    return (\r\n      <div className=\"container\">\r\n        <form className=\"white\" onSubmit={this.handleSubmit}>\r\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n            <div className=\"center red-text\">\r\n              {authError ? <p>{authError}</p> : null}\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n//mapping to props to get auth error back\r\nconst mapStateToProps = state => {\r\n  return {\r\n    authError: state.auth.authError, // attaching error property to props\r\n    auth: state.firebase.auth // attaching auth to props\r\n  };\r\n};\r\n\r\n//takes in the action or \"dispatch\"\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    signIn: creds => dispatch(signIn(creds)) //what we are attaching to the props to the components\r\n  };\r\n};\r\n//mapdispatch for actions, mapstatetoprops to sync the state\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SignIn);\r\n","import React, {Component} from 'react'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport {signUp} from '../../store/actions/authActions'\r\n\r\nclass SignUp extends Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        firstName: '',\r\n        lastName: '',\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signUp(this.state)\r\n    }\r\n    render() {\r\n        const {auth, authError} = this.props;\r\n        if (auth.uid) return <Redirect to='/' />\r\n        return (\r\n            <div className=\"container\">\r\n                <form className=\"white\" onSubmit={this.handleSubmit}>\r\n                    <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id='email' onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id='password' onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"firstName\">First Name</label>\r\n                        <input type=\"text\" id='firstName' onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"lastName\">Last Name</label>\r\n                        <input type=\"text\" id='lastName' onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\r\n                        <div className=\"center red-text\">\r\n                            {authError ? <p>{authError}</p> : null}\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.authError\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signUp: (creds) => dispatch(signUp(creds))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)\r\n\r\n","import React, {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {createProject} from '../../store/actions/projectActions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\n\r\nclass CreateProject extends Component {\r\n    state = {\r\n        title: '',\r\n        content: ''\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        }) //passes the project into the function which performs the dispatch\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(\"clicked\");\r\n        this.props.createProject(this.state);\r\n        this.props.history.push('/')\r\n    }\r\n    render() {\r\n        const { auth } = this.props;\r\n        if (!auth.uid) return <Redirect to='/signin' /> \r\n        return (\r\n            <div className=\"container\">\r\n                <form className=\"white\" onSubmit={this.handleSubmit}>\r\n                    <h5 className=\"grey-text text-darken-3\">Create a New Project</h5>\r\n                    <div className=\"input-field\">\r\n                        <input type=\"text\" id='title' onChange={this.handleChange} />\r\n                        <label htmlFor=\"title\">Project Title</label>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\r\n                        <label htmlFor=\"content\">Project Content</label>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1\">Create</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n//adding auth to state\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      auth: state.firebase.auth\r\n    }\r\n  }\r\n  \r\n\r\n//takes in dispatch method\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        //returning whatever property we can to add to the props. Adding method\r\n        createProject: (project) => dispatch(createProject(project))//takes in individual object and then dispatch action creator\r\n    }\r\n}\r\n//function, hoc, then wrap it\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)\r\n//the first parameter is always mapStateToProps. There is none; passing null\r\n\r\n\r\n\r\n// handleChange function is called each time we key down thus it is not good practice. we can change state using on onSubmit itself, using refs and here it goes\r\n//   handleSubmit = (e) => {\r\n//     e.preventDefault()\r\n//       this.setState(() => {\r\n//         return {\r\n//           title: this.refs.title.value,\r\n//           content: this.refs.content.value\r\n//         }\r\n//       }, () => {\r\n//         this.props.createProject(this.state)\r\n//       })\r\n//     }\r\n// or\r\n// handleSubmit = (e) => {\r\n//     e.preventDefault()\r\n//       this.setState({\r\n//           title: this.refs.title.value,\r\n//           content: this.refs.content.value\r\n//       }, () => {\r\n//         this.props.createProject(this.state)\r\n//       })\r\n//     }","export const createProject = (project) => {\r\n  //using thunk to create function\r\n  console.log(\"Passing to firebase\")\r\n  //get state if needed\r\n  return (dispatch, getState, {getFirebase, getFirestore}) => { //dispatches and action to the reducer\r\n    \r\n    /* normally would be this. but thunk enables us to return a \"function\"\r\n    return {\r\n      type: 'ADD_PROJECT',\r\n      project:project\r\n    } */\r\n    const firestore = getFirestore();\r\n    const profile = getState().firebase.profile; //state obj\r\n    const authorId = getState().firebase.auth.uid; //grabbing id\r\n    // make async call to database to the database name\r\n    //spreading the project, then adding an \"author details\"\r\n    firestore.collection('projects').add({\r\n      ...project,\r\n      authorFirstName: profile.firstName,\r\n      authorLastName: profile.lastName,\r\n      authorId: authorId,\r\n      createdAt: new Date()\r\n    }).then(() => {\r\n      dispatch({ type: 'CREATE_PROJECT', project });\r\n    }).catch(err => {\r\n      dispatch({ type: 'CREATE_PROJECT_ERROR' }, err);\r\n    });\r\n  };\r\n};\r\n","import React from 'react';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\nimport Navbar from './components/layout/Navbar';\r\nimport Dashboard from './components/dashboard/Dashboard';\r\nimport ProjectDetails from './components/projects/ProjectDetails';\r\nimport SignIn from './components/auth/SignIn';\r\nimport SignUp from './components/auth/SignUp';\r\nimport CreateProject from './components/projects/CreateProject';\r\n\r\nfunction App() {\r\n  // BrowserRouter enables links\r\n  return (\r\n    <BrowserRouter>\r\n      <div className=\"App\">\r\n        <Navbar />\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Dashboard} />\r\n          <Route path=\"/signin\" component={SignIn}/>\r\n          <Route path=\"/signup\" component={SignUp}/>\r\n          <Route path=\"/create\" component={CreateProject}/>\r\n          <Route path=\"/project/:id\" component={ProjectDetails}/>\r\n        </Switch>\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","//importing just the base features\r\nimport firebase from 'firebase/app';\r\n//this is the database\r\nimport 'firebase/firestore';\r\n//authentication\r\nimport 'firebase/auth';\r\n\r\n\r\n// Your web app's Firebase configuration\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyD6O9F_llB2gUiKApVTX3Hh2Gk1aghgV4U\",\r\n  authDomain: \"mario-plan-01.firebaseapp.com\",\r\n  databaseURL: \"https://mario-plan-01.firebaseio.com\",\r\n  projectId: \"mario-plan-01\",\r\n  storageBucket: \"\",\r\n  messagingSenderId: \"387363460849\",\r\n  appId: \"1:387363460849:web:aedeb7cbd6242167\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.firestore();\r\n// firebase.firestore().settings({ timestampsInSnapshots: true });\r\nexport default firebase","const initState = {\r\n  authError: null, // if error it will change from the switch\r\n}\r\n\r\n//the first time this reducer runs and does not have a state. Need to pass\r\nconst authReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case 'LOGIN_ERROR':\r\n      console.log('Login error')\r\n      return {\r\n        ...state, // spreading state and adding property\r\n        authError: 'Login failed', //property\r\n      }\r\n    case 'LOGIN_SUCCESS':\r\n      console.log('login success')\r\n      //need to reset the auth error to be successful\r\n      return {\r\n        ...state,\r\n        authError: null,\r\n      }\r\n    case 'SIGNOUT_SUCCESS':\r\n      console.log('signout success')\r\n      return state\r\n    case 'SIGNUP_SUCCESS':\r\n      console.log('signup success')\r\n      return {\r\n        ...state,\r\n        authError: null\r\n      }\r\n    case 'SIGNUP_ERROR':\r\n      console.log('signup error')\r\n      return {\r\n        ...state,\r\n        authError: action.err.message\r\n      }\r\n    default:\r\n      // just in case none match the action\r\n      return state\r\n  }\r\n}\r\n\r\nexport default authReducer\r\n","const initState = {\r\n  projects: [ //properties\r\n    {id: '1', title: 'help me find peach', content: 'blah blah blah'},\r\n    {id: '2', title: 'collect all the stars', content: 'blah blah blah'},\r\n    {id: '3', title: 'egg hunt with yoshi', content: 'blah blah blah'}\r\n  ]\r\n}\r\n\r\n\r\n//takes in action, performs switch case. \r\nconst projectReducer = (state = initState, action) => {\r\n  //checking action and using the function from projectActions\r\n  switch (action.type) {\r\n    case 'CREATE_PROJECT':\r\n      console.log('create project success');\r\n      return state;\r\n    case 'CREATE_PROJECT_ERROR':\r\n      console.log('create project error');\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default projectReducer;","import authReducer from './authReducer'\r\nimport projectReducer from './projectReducer'\r\nimport {combineReducers} from 'redux'\r\n//this is the pre-made reducer and it will know about the about the firebase project. from the fbconfig\r\nimport { firestoreReducer } from 'redux-firestore';\r\nimport { firebaseReducer } from 'react-redux-firebase'\r\n\r\n//importing all reducers and combining it and then passing\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  project: projectReducer,\r\n  firestore: firestoreReducer, // connected to the whole database\r\n  firebase: firebaseReducer // connecting auth status to the auth \r\n\r\n});\r\n// the key name will be the data property on the state object\r\nexport default rootReducer\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n// create store and provider \r\nimport {createStore, applyMiddleware, compose} from 'redux'\r\nimport {Provider} from 'react-redux'\r\n// redux middleware\r\nimport thunk from 'redux-thunk'\r\n//alows for firebase use\r\nimport {reduxFirestore, getFirestore} from 'redux-firestore';\r\nimport {reactReduxFirebase, getFirebase} from 'react-redux-firebase';\r\nimport fbConfig from './config/firebaseConfig'\r\nimport rootReducer from './store/reducers/rootReducer'\r\n\r\n\r\n// creating a store(named store) and passing all combined reducers\r\n//thunk with extra args. two objs are passed\r\nconst store = createStore(rootReducer,\r\n    //compose function allows for multiple store enhancers like rootreducer combining several store enhancer\r\n    compose(\r\n        applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\r\n        reactReduxFirebase(fbConfig, {userProfile: 'users', useFirestoreForProfile: true, attachAuthIsReady: true}), // redux binding for firebase and passing config so that store knows what to connect to\r\n        reduxFirestore(fbConfig) // redux bindings for firestore\r\n    )\r\n);\r\n// applyMiddleware takes in a list of applyMiddlewares\r\n\r\n//passing the provider the component and wrap it around the app and pass the store to the application\r\nstore.firebaseAuthIsReady.then(() => {\r\n    ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\r\n    serviceWorker.unregister();\r\n  });\r\n\r\n\r\n//Newer base implementation for firebase:https://stackoverflow.com/questions/53872757/react-redux-v6-a-v3-version-of-react-redux-firebase-is-required\r\n\r\n// http://docs.react-redux-firebase.com/history/v3.0.0/"],"sourceRoot":""}